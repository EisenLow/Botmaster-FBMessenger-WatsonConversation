'use strict';var R=require('ramda'),_require=require('async'),nextTick=_require.nextTick,debug=require('debug')('botmaster:ware:fulfill:actions'),render=require('posthtml-render'),setName=function(a,b){return R.set(R.lensProp('name'),b)(a)},indexActionName=R.mapObjIndexed(setName),toArray=R.compose(R.values,indexActionName),checkArray=function(a){return Array.isArray(a)?a:toArray(a)},actionApplies=function(a,b){return R.find(R.propEq('tag',b.name),a)},getPendingActions=function(a,b){return R.filter(R.curry(actionApplies)(a),b)},mapToNames=R.map(R.prop('name')),getPendingActionNames=function(a,b){return R.compose(mapToNames,R.curry(getPendingActions)(a))(b)},isPendingActions=function(a,b){return 0<getPendingActionNames(a,checkArray(b)).length},seriesActions=R.filter(R.prop('series')),parallelActions=R.filter(R.compose(R.not,R.prop('series'))),isSync=R.allPass([function(a){return!R.isNil(a)},R.anyPass([R.is(String),R.is(Number)])]),clearNodes=function(a,b,c){return R.range(a,b).forEach(function(d){c[d]=''})},getTasks=function(a,b,c){var d=evalActions(a,b,c);return{series:R.compose(R.map(createTask(a)),seriesActions)(d),parallel:R.compose(R.map(createTask(a)),parallelActions)(d)}},createTask=function(a){return function(b){return function(c){var d=function(f,g){return debug(b.name+' '+b.index+' got a response '+g),b.response=g||'','step'==b.evaluate&&(evalResponse(a,b),debug('tree is now '+JSON.stringify(a))),c(f,b)};try{(function(){var f=b.controller(b.params,d);f&&'function'==typeof f.then?(debug(b.name+' controller is a promise'),f.then(function(g){return d(null,g)}).catch(d)):isSync(f)?(debug(b.name+' controller is sync'),nextTick(function(){return d(null,f)})):debug(b.name+' controller is async')})()}catch(f){nextTick(function(){return c(f)})}}}},makeParams=function(a,b,c,d){var f={attributes:b.attrs||{},tree:c,get index(){return R.compose(R.findIndex(R.propEq('index',''+a)),R.values(),R.filter(R.propEq('tag',b.tag)),R.mapObjIndexed(function(h,j){return R.set(R.lensProp('index'),j,h)}))(c)},get tag(){return render(b)},get content(){return render(b.content)},get before(){return render(c.slice(0,a))},get after(){return render(c.slice(a+1))},get all(){return render(c.filter(function(h){return!h.tag}))}};for(var g in d)f[g]=d[g];return f},evalActions=function(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:[];return a.forEach(function(f,g){f&&R.has(f.tag,b)&&d.push(R.merge(b[f.tag],{params:makeParams(g,f,a,c),index:g,name:f.tag,el:f}))}),debug('Got '+d.length+' tasks'),d},evalResponse=function(a,b){if(!a[b.index]||!a[b.index].tag||a[b.index].tag!==b.name)return a[b.index];if('function'==typeof b.replace)b.replace(a,b);else switch(b.replace){case'before':clearNodes(0,b.index,a),a[b.index]=b.response;break;case'after':clearNodes(b.index,a.length,a),a[b.index]=b.response;break;case'all':a.length=0,a[0]=b.response;break;default:a[b.index]=b.response;}};module.exports={getTasks:getTasks,isPendingActions:isPendingActions,evalResponse:evalResponse};